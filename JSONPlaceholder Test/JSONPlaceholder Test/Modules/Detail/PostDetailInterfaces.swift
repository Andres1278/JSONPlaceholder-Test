//
//  PostDetailInterfaces.swift
//  JSONPlaceholder Test
//
//  Created by Pedro Andres Villamil on 27/08/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

enum UserInfoResult {
    case success(User)
    case failure(Error)
}

enum CommentsResult {
    case success([Comment])
    case failure(Error)
}

enum DetailResult {
    case success(Post)
    case failure(Error)
}

enum PostDetailSections: Int, CaseIterable {
    case postInfo
    case userInfo
    case comments
}

enum PostDetailViewItemInterface {
    case postInfo(PostDetailCellViewModel?)
    case userInfo(UserCellViewModel?)
    case comments(CommentCellViewModel?)
}

protocol PostDetailWireframeInterface: WireframeInterface {
    func showAlert(witn message: String)
}

protocol PostDetailViewInterface: ViewInterface {
    func reloadView()
}

protocol PostDetailPresenterInterface: PresenterInterface {
    var postId: Int { get }
    var numberOfSections: Int { get }
    var isFavorite: Bool { get }
    func numberOfItems(in section: Int) -> Int
    func item(at indexPath: IndexPath) -> PostDetailViewItemInterface?
    func getSectionHeader(in section: Int) -> String?
    func toggleFavoriteState() 
}

protocol PostDetailInteractorInterface: InteractorInterface {
    func getInfoUser(for userId: Int, completion: @escaping (UserInfoResult) -> Void)
    func getComments(for postId: Int, completion: @escaping (CommentsResult) -> Void)
    func getDetail(for postId: Int, completion: @escaping (DetailResult) -> Void)
}
